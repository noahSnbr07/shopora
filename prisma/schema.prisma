// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  //base
  id         String   @id @default(uuid())
  created    DateTime @default(now())
  updated    DateTime @updatedAt
  identifier String   @default("New User")

  //props
  name       String
  hash       String
  lastSignIn DateTime // show stat `last-sign-in` on frontend
  profile    Profile?

  //relations
}

model Profile {
  //base
  id         String   @id @default(uuid())
  created    DateTime @default(now())
  updated    DateTime @updatedAt
  identifier String   @default("New Profile")

  //props
  user   User      @relation(fields: [userId], references: [id])
  listed Product[] @relation("ProfileListedProducts")
  saved  Product[] @relation("ProfileSavedProducts")

  //relations
  userId String @unique
}

model Product {
  //base
  id         String   @id @default(uuid())
  created    DateTime @default(now())
  updated    DateTime @updatedAt
  identifier String   @default("New Product")

  //props
  name        String
  description String
  price       Float
  count       Int       @default(1) // multiple items?
  unavailable Boolean   @default(false) // temporal unavailability possible
  listedBy    Profile[] @relation("ProfileListedProducts")
  savedBy     Profile[] @relation("ProfileSavedProducts")
}
